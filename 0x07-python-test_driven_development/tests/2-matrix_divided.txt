this module defines a matrix division function ```(matrix_divided(matrix, div))
```

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test case 1: Dividing matrix by 3
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Test case 2: Dividing matrix by 0
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Test case 3: Matrix with non-integer or non-float elements
>>> matrix = [
...     [1, '2', 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test case 4: Matrix with unequal rows
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6],
...     [7, 8]
... ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Test case 5: Matrix with empty rows
>>> matrix = [
...     [],
...     []
... ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Test case 6: Matrix with non-equal sizes
>>> matrix = [
...     [1, 2, 3],
...     [4, 5]
... ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size
